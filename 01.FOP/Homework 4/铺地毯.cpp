/*问题描述
　　为了准备一个独特的颁奖典礼，组织者在会场的一片矩形区域（可看做是平面直角坐标系的第一象限）铺上一些矩形地毯。一共有n 张地毯，编号从1 到n。现在将这些地毯按照编号从小到大的顺序平行于坐标轴先后铺设，后铺的地毯覆盖在前面已经铺好的地毯之上。地毯铺设完成后，组织者想知道覆盖地面某个点的最上面的那张地毯的编号。注意：在矩形地毯边界和四个顶点上的点也算被地毯覆盖。
输入格式
　　输入共 n+2 行。
　　第一行，一个整数 n，表示总共有n 张地毯。
　　接下来的 n 行中，第i+1 行表示编号i 的地毯的信息，包含四个正整数a，b，g，k，每两个整数之间用一个空格隔开，分别表示铺设地毯的左下角的坐标（a，b）以及地毯在x轴和y 轴方向的长度。
　　第 n+2 行包含两个正整数x 和y，表示所求的地面的点的坐标（x，y）。
输出格式
　　输出共 1 行，一个整数，表示所求的地毯的编号；若此处没有被地毯覆盖则输出-1。*/
#include<stdio.h>
using namespace std;
int main() {
	int n, x, y, output;
	scanf("%d", &n);
	int a[10000] = { 0 }, b[10000] = { 0 }, g[10000] = { 0 }, k[10000] = { 0 };
	for (int i = 0; i < n; i++)
		scanf("%d %d %d %d", &a[i], &b[i], &g[i], &k[i]);
	scanf("%d %d", &x, &y);
	for (int j = n - 1; j >= 0; j--) {
		if ((b[j] + k[j] >= y) && (b[j] <= y) && (a[j] <= x) && (a[j] + g[j] >= x)) {
			output = j;
			break;
		}
	}
	printf("%d", output + 1);
	return 0;
}